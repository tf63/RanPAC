FROM nvidia/cuda:11.1.1-cudnn8-runtime-ubuntu20.04 AS base

# 非インタラクティブモードにする (入力待ちでブロックしなくなる)
ARG DEBIAN_FRONTEND=noninteractive

WORKDIR /app

RUN --mount=type=cache,target=/var/lib/apt,sharing=locked \
    --mount=type=cache,target=/var/cache/apt,sharing=locked \
    apt-get update && \
    apt-get install -y \
    wget \
    bzip2 \
    build-essential \
    git \
    git-lfs \
    curl \
    ca-certificates \
    libsndfile1-dev \
    libgl1

# ----------------------------------------------------------------
# create user
# ----------------------------------------------------------------
# UIDとGIDは外から与える
ARG USER_UID=10001
ARG USER_GID=10001

# コンテナ内でのユーザー名， グループ名
ARG USER_NAME=user
ARG GROUP_NAME=user

# グループが存在しなかったら，　適当なグループを作成
RUN if ! getent group $USER_GID >/dev/null; then \
    groupadd -g $USER_GID $GROUP_NAME; \
    fi

# ユーザーを作成
RUN useradd -m -u $USER_UID -g $USER_GID -s /bin/bash $USER_NAME

# Pythonのバージョン
ARG PYTHON_VERSION
# バッファの無効化
ENV PYTHONUNBUFFERED=1
# .pycを作らないように
ENV PYTHONDONTWRITEBYTECODE=1
# Ryeのバージョン
ENV RYE_VERSION=0.38.0
# Ryeのインストール先
ENV RYE_HOME=/opt/rye
# torchvisionでモデルを保存する場所
ENV TORCH_HOME /data/.cache/torch
# huggingfaceでモデルを保存する場所
ENV HF_HOME /data/.cache/huggingface

# ユーザー周りのセットアップ
RUN chown $USER_UID:$USER_GID /app && \
    mkdir $RYE_HOME && \
    chown $USER_UID:$USER_GID $RYE_HOME

# 初期ユーザーの変更
USER $USER_NAME
ENV PATH=$PATH:$RYE_HOME/shims:/home/$USER_NAME/.local/bin

# ryeのインストール
RUN curl -sSf https://rye.astral.sh/get | RYE_VERSION=$RYE_VERSION RYE_INSTALL_OPTION="--yes" bash && \
    rye config --set-bool behavior.global-python=true && \
    rye config --set-bool behavior.use-uv=true

# ----------------------------------------------------------------
# torch-1.9.0 環境
# ----------------------------------------------------------------
FROM base AS torch-1.9.0

COPY --chown=$USER_NAME:$GROUP_NAME .python-version pyproject.toml requirements.lock requirements-dev.lock ./
RUN rye pin $PYTHON_VERSION && rye sync
